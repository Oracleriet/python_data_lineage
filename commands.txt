--start http server i separat command prompt
cd .\git\python_data_lineage\widget\
python -m http.server

-- Vis data lineage:
  -- start separat command prompt (seperat fra http server) 
cd .\git\python_data_lineage\

-- file specific
python dlineage.py /t oracle /f ..\temp\"DFRI-77 - CC reports"\source\u_rec_distr_lineage.sql /graph
python dlineage.py /t oracle /f ..\temp\"DFRI-77 - CC reports"\source\edited\app_cr\ds074_output_edit.sql /graph

-- folder specific
python dlineage.py /t oracle /d ..\temp\"DFRI-77 - CC reports"\source\edited\app_cr /graph
python dlineage.py /t oracle /d ..\temp\"DFRI-77 - CC reports"\source\edited\app_cr\ds074 /graph

-- table and views only

python dlineage.py /t oracle /d ..\temp\"DFRI-77 - CC reports"\source\edited\ds074 /graph /s
python dlineage.py /t oracle /d ..\temp\"DFRI-77 - CC reports"\source\edited\ds073 /graph /s
python dlineage.py /t oracle /d ..\temp\"DFRI-77 - CC reports"\source\edited\ds071\sql /graph /s

python dlineage.py /t oracle /d ..\temp\"DFRI-77 - CC reports"\source\edited\ds074 /graph /s /traceView

python custom_dlineage.py /t oracle /d sql_ds_073 /o tempo /graph 

--Custom dlineage:
--Undgå overskrivning af diagram
 /o: custom output: json/lineageGraph_/oParamter.json
 opret en særskilt html fil som henviser til denne json fil, DS073.html
 
python custom_dlineage.py /t oracle /d ..\temp\code_analysis\use_cases\instrep_engage\sql\edited /o instrep_engage /s /graph 

python custom_dlineage.py /t oracle /d ..\temp\code_analysis\use_cases\instrep_engage /o instrep_engage /graph 
 json: json\lineageGraph_instrep_engage.json
 url: http://localhost:8000/instrep_engage.html





 python custom_dlineage.py /t oracle /d ..\temp\code_analysis\use_cases\instrep_engage /o instrep_engage /graph 

python custom_dlineage.py /t oracle /d ..\temp\code_analysis\edited\use_cases\ds071 /o tempo /graph 
python custom_dlineage.py /t oracle /d ..\temp\code_analysis\edited\use_cases\ds073 /graph 
python custom_dlineage.py /t oracle /d ..\temp\code_analysis\use_cases\ds074 /graph 


/* https://github.com/sqlparser/python_data_lineage */
  /t: Required, specify the database type
    
	The valid value: access,bigquery,couchbase,dax,db2,greenplum, gaussdb, hana,hive,impala,informix,mdx,mssql,
    sqlserver,mysql,netezza,odbc,openedge,oracle,postgresql,postgres,redshift,snowflake,
    sybase,teradata,soql,vertica 
	
	the default value is oracle

  /f: optional, The SQL file that needs to be processed, if this option is not specified, /d must be speicified.

  /d: optional, All SQL files under this directory will be processed.

  /j: optional, The analyzed result will include the join relationship.

  /s: optional, Ignore the intermediate results of the output data lineage.

  /topselectlist: optional, output the column in select list. this option valid only /s is specified.

  /withTemporaryTable: optional, only valid use with /s option, including the data lineage of temporary table used in the SQL.

  /i: optional, this option work almost the same as /s option, but will keep the data lineage generated by function call.

  /if: optional, keep all the intermediate result in the output data lineage, but remove the result derived from function call.

  /ic: optional, ignore the coordinate in the output.

  /lof: optional, if a column in the SQL is not qualifiey with a table name, and multiple tables are used in the from clause, then, the column will be linked to the first table in from clause.

  /traceView: optional, only list source table and view, ignore all intermediate result.

  /json: optional, ouput in json format.

  /tableLineage [/csv /delimiter]: optional, only output data lineage at table level.

  /csv: optional, output the data lineage in CSV format.

  /delimiter: optional, specify the separate character used in CSV output.

  /env: optional, specify a metadata.json to provide the metadata that can be used during SQL analysis.

  /transform: optional, includind the code that do the transform.

  /coor: optional, whether including the coordinate in the output.

  /defaultDatabase: optional, specify a default database.

  /defaultSchema: optional, specify a default schema.

  /showImplicitSchema: optional, Display the schema information inferred from the SQL statement.

  /showConstant: optional, whether show constant.

  /treatArgumentsInCountFunctionAsDirectDataflow: optional,treate column used in count function as a direct dataflow.

  /filterRelationTypes: optional, supported types: fdd，fdr，join，call，er，seperated by comma if multiple values are specified.

  /graph: optional, automatically open web browser to show the data lineage diagram.
  /er: optional, automatically open web browser to show the ER diagram.